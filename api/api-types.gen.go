// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"github.com/google/uuid"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Answer defines model for Answer.
type Answer struct {
	Answer     *string `json:"answer,omitempty"`
	AnswerUUID *UUID   `json:"answerUUID,omitempty"`
}

// AnswerReceivedResponse defines model for AnswerReceivedResponse.
type AnswerReceivedResponse struct {
	Message *string `json:"message,omitempty"`
}

// AnswerRequest defines model for AnswerRequest.
type AnswerRequest struct {
	Answer *string `json:"answer,omitempty"`
}

// AnswerWithVotes defines model for AnswerWithVotes.
type AnswerWithVotes struct {
	Answer     *string     `json:"answer,omitempty"`
	AnswerUUID *UUID       `json:"answerUUID,omitempty"`
	Votes      *[]VoteUser `json:"votes,omitempty"`
}

// AnswersResponse defines model for AnswersResponse.
type AnswersResponse struct {
	Answers *[]Answer `json:"answers,omitempty"`
}

// BadRequestResponse defines model for BadRequestResponse.
type BadRequestResponse struct {
	Error *string `json:"error,omitempty"`
}

// CreateUserRequest defines model for CreateUserRequest.
type CreateUserRequest struct {
	Username *string `json:"username,omitempty"`
}

// ForbiddenResponse defines model for ForbiddenResponse.
type ForbiddenResponse struct {
	Error *string `json:"error,omitempty"`
}

// GameCreatedResponse defines model for GameCreatedResponse.
type GameCreatedResponse struct {
	GameId *string `json:"gameId,omitempty"`
}

// GameFinishedResponse defines model for GameFinishedResponse.
type GameFinishedResponse struct {
	Message *string `json:"message,omitempty"`
}

// GameNotFoundResponse defines model for GameNotFoundResponse.
type GameNotFoundResponse struct {
	Error *string `json:"error,omitempty"`
}

// GameStartedResponse defines model for GameStartedResponse.
type GameStartedResponse struct {
	Message *string `json:"message,omitempty"`
}

// GameStatusResponse defines model for GameStatusResponse.
type GameStatusResponse struct {
	GameMasterUUID *UUID `json:"gameMasterUUID,omitempty"`

	// ReceivedAnswers Get the number of answers received from the players
	ReceivedAnswers *int `json:"receivedAnswers,omitempty"`

	// Status Status of the game
	Status *int    `json:"status,omitempty"`
	Users  *[]User `json:"users,omitempty"`
}

// HealthStatus defines model for HealthStatus.
type HealthStatus struct {
	Status *string `json:"status,omitempty"`
}

// JoinGameResponse defines model for JoinGameResponse.
type JoinGameResponse struct {
	Message *string `json:"message,omitempty"`
}

// NextRoundResponse defines model for NextRoundResponse.
type NextRoundResponse struct {
	Message *string `json:"message,omitempty"`
}

// PlayOrderResponse defines model for PlayOrderResponse.
type PlayOrderResponse struct {
	PlayOrder *[]PlayOrderUser `json:"playOrder,omitempty"`
}

// PlayOrderSetResponse defines model for PlayOrderSetResponse.
type PlayOrderSetResponse struct {
	Message *string `json:"message,omitempty"`
}

// PlayOrderUser defines model for PlayOrderUser.
type PlayOrderUser struct {
	Place    *int    `json:"place,omitempty"`
	UserUUID *UUID   `json:"userUUID,omitempty"`
	Username *string `json:"username,omitempty"`
}

// RevealVotesResponse defines model for RevealVotesResponse.
type RevealVotesResponse struct {
	Answers *[]AnswerWithVotes `json:"answers,omitempty"`
}

// SelectValidAnswersRequest defines model for SelectValidAnswersRequest.
type SelectValidAnswersRequest struct {
	ValidAnswers *[]UUID `json:"validAnswers,omitempty"`
}

// SetPlayOrderRequest defines model for SetPlayOrderRequest.
type SetPlayOrderRequest struct {
	PlayOrder *[]struct {
		Place    *int  `json:"place,omitempty"`
		UserUUID *UUID `json:"userUUID,omitempty"`
	} `json:"playOrder,omitempty"`
}

// UUID defines model for UUID.
type UUID = uuid.UUID

// UnauthorizedResponse defines model for UnauthorizedResponse.
type UnauthorizedResponse struct {
	Error *string `json:"error,omitempty"`
}

// User defines model for User.
type User struct {
	UserUUID *UUID   `json:"userUUID,omitempty"`
	Username *string `json:"username,omitempty"`
}

// UserToken defines model for UserToken.
type UserToken struct {
	UserToken *UUID `json:"userToken,omitempty"`
	UserUUID  *UUID `json:"userUUID,omitempty"`
}

// ValidAnswersSelectedResponse defines model for ValidAnswersSelectedResponse.
type ValidAnswersSelectedResponse struct {
	Message *string `json:"message,omitempty"`
}

// VoteRecordedResponse defines model for VoteRecordedResponse.
type VoteRecordedResponse struct {
	Message *string `json:"message,omitempty"`
}

// VoteRequest defines model for VoteRequest.
type VoteRequest struct {
	AnswerUUID *UUID `json:"answerUUID,omitempty"`
}

// VoteUser defines model for VoteUser.
type VoteUser struct {
	UserUUID *UUID   `json:"userUUID,omitempty"`
	Username *string `json:"username,omitempty"`
}

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = CreateUserRequest

// SendAnswerJSONRequestBody defines body for SendAnswer for application/json ContentType.
type SendAnswerJSONRequestBody = AnswerRequest

// SelectValidAnswersJSONRequestBody defines body for SelectValidAnswers for application/json ContentType.
type SelectValidAnswersJSONRequestBody = SelectValidAnswersRequest

// VoteForAnswerJSONRequestBody defines body for VoteForAnswer for application/json ContentType.
type VoteForAnswerJSONRequestBody = VoteRequest

// SetPlayOrderJSONRequestBody defines body for SetPlayOrder for application/json ContentType.
type SetPlayOrderJSONRequestBody = SetPlayOrderRequest
